<?php
function user_term_credits_schema() {
	$schema = array();
	
	$schema['user_term_credits_limits'] = array(
		'description' => 'User credits and term limits.',
		'fields' => array(
			'uid' => array(
				'type' => 'int',
        		'not null' => TRUE,
        		'default' => 0,
				'unsigned' => TRUE,
				'description' => "User ID of the user"
			),
			'credit_limit' => array(
				'description' => 'User credit limit.',
        		'type' => 'numeric',
        		'precision' => 16,
        		'scale' => 5,
        		'not null' => TRUE,
        		'default' => 0.0
			),
			'term_limit' => array(
				'description' => 'The sort criteria for products.',
        		'type' => 'int',
        		'size' => 'tiny',
        		'not null' => TRUE,
        		'default' => 10
			),
			'term_note' => array(
				'description' => 'Credit term notes.',
        		'type' => 'text'
			)
		),
		'primary key' => array('uid')
	);
	
	$schema['user_term_credits_usages'] = array(
		'description' => 'User credits and term limits log.',
		'fields' => array(
			'cuid' => array(
				'type' => 'serial',
        		'unsigned' => TRUE,
        		'not null' => TRUE,
				'description' => "Credit payment id."
			),
			'uid' => array(
				'type' => 'int',
        		'not null' => TRUE,
        		'default' => 0,
				'unsigned' => TRUE,
				'description' => "User ID of the user"
			),
			'order_id' => array(
				'type' => 'int',
        		'not null' => TRUE,
        		'default' => 0,
				'unsigned' => TRUE,
				'description' => "Order ID of the order."
			),
			'credit_amount' => array(
				'description' => 'Credit amount used for this transaction.',
        		'type' => 'numeric',
        		'precision' => 16,
        		'scale' => 5,
        		'not null' => TRUE,
        		'default' => 0.0
			),
			'term_limit' => array(
				'description' => 'The sort criteria for products.',
        		'type' => 'int',
        		'size' => 'tiny',
        		'not null' => TRUE,
        		'default' => 10
			),
			'consumption_date' => array(
        		'description' => 'The Unix timestamp indicating when the credits were consumed.',
        		'type' => 'int',
				'size' => 'big',
        		'not null' => TRUE,
				'unsigned' => TRUE,
        		'default' => 0
      		),
			'due_date' => array(
        		'description' => 'The Unix timestamp indicating when the credits are due settlement.',
        		'type' => 'int',
				'size' => 'big',
        		'not null' => TRUE,
				'unsigned' => TRUE,
        		'default' => 0
      		),
			'settled' => array(
				'description' => 'The flag for settling the usage.',
        		'type' => 'int',
        		'size' => 'tiny',
        		'not null' => TRUE,
        		'default' => 0
			)
		),
		'indexes' => array(
			'consumptions' => array('cuid', 'uid'),
		),
		'primary key' => array('cuid')
	);
	
	$schema['user_term_credits_settlements'] = array(
		'description' => 'User credits settlements log.',
		'fields' => array(
			'sid' => array(
				'type' => 'serial',
        		'unsigned' => TRUE,
        		'not null' => TRUE,
				'description' => "Credit settlement id."
			),
			'cuid' => array(
				'type' => 'int',
        		'not null' => TRUE,
        		'default' => 0,
				'unsigned' => TRUE,
				'description' => "User ID of the user"
			),
			'settlement_amount' => array(
				'description' => 'Credit amount used for this transaction.',
        		'type' => 'numeric',
        		'precision' => 16,
        		'scale' => 5,
        		'not null' => TRUE,
        		'default' => 0.0
			),
			'payment_type' => array(
		        'description' => 'The type of payment that was used to make settlement.',
		        'type' => 'varchar',
		        'length' => 255,
		        'not null' => TRUE,
		        'default' => ''
		    ),
			'remarks' => array(
		        'description' => 'Remarks',
		        'type' => 'text',
		        'not null' => TRUE,
		        'size' => 'big'
		    ),
			'settlement_date' => array(
        		'description' => 'The Unix timestamp indicating when the credits were settled.',
        		'type' => 'int',
				'size' => 'big',
        		'not null' => TRUE,
				'unsigned' => TRUE,
        		'default' => 0
      		),
      		'euid' => array(
				'type' => 'int',
        		'not null' => TRUE,
        		'default' => 0,
				'unsigned' => TRUE,
				'description' => "User ID of the employee."
			),
      		'register_id' => array(
				'description' => t('Register id'),
        		'type' => 'varchar',
        		'length' => 255,
        		'not null' => TRUE,
        		'default' => ''
			)
		),
		'indexes' => array(
			'consumptions' => array('sid', 'cuid'),
		),
		'primary key' => array('sid')
	);

	$schema['user_term_credits_cash_log'] = array(
		'description' => 'A log of cash payments.',
		'fields' => array(
			'pid' => array(
				'type' => 'serial',
				'not null' => TRUE,
				'unsigned' => TRUE,
				'description' => 'The payment event log id.'
			),
			'sid' => array(
				'type' => 'int',
        		'not null' => TRUE,
        		'default' => 0,
				'unsigned' => TRUE,
				'description' => "Settlement ID"
			),
			'amount_paid' => array(
				'type' => 'numeric',
		        'precision' => 16,
		        'scale' => 5,
		        'not null' => TRUE,
		        'default' => 0.0,
			),
			'change' => array(
				'type' => 'numeric',
		        'precision' => 16,
		        'scale' => 5,
		        'not null' => TRUE,
		        'default' => 0.0,
			),
			'total' => array(
				'type' => 'numeric',
		        'precision' => 16,
		        'scale' => 5,
		        'not null' => TRUE,
		        'default' => 0.0,
			)
		),
		'primary key' => array('pid'),
		'indexes' => array(
    		'sid'        => array('sid')
  		)
	);

	$schema['user_term_credits_credit_card_log'] = array(
		'description' => 'A log of cash payments.',
		'fields' => array(
			'pid' => array(
				'type' => 'serial',
				'not null' => TRUE,
				'unsigned' => TRUE,
				'description' => 'The payment event log id.'
			),
			'sid' => array(
				'type' => 'int',
        		'not null' => TRUE,
        		'default' => 0,
				'unsigned' => TRUE,
				'description' => "Settlement ID"
			),
			'amount_paid' => array(
				'type' => 'numeric',
		        'precision' => 16,
		        'scale' => 5,
		        'not null' => TRUE,
		        'default' => 0.0,
			),
			'transaction_id' => array(
				'description' => t('Credit card transaction id.'),
        		'type' => 'varchar',
        		'length' => 255,
        		'not null' => TRUE,
        		'default' => ''
			)
		),
		'primary key' => array('pid'),
		'indexes' => array(
    		'sid'        => array('sid')
  		)
	);

	$schema['user_term_credits_check_log'] = array(
		'description' => 'A log of check payments.',
		'fields' => array(
			'pid' => array(
				'type' => 'serial',
				'not null' => TRUE,
				'unsigned' => TRUE,
				'description' => 'The payment event log id.'
			),
			'sid' => array(
				'type' => 'int',
        		'not null' => TRUE,
        		'default' => 0,
				'unsigned' => TRUE,
				'description' => "Settlement id"
			),
			'paid_amount' => array(
				'type' => 'numeric',
		        'precision' => 16,
		        'scale' => 5,
		        'not null' => TRUE,
		        'default' => 0.0,
			),
			'check_number' => array(
				'description' => t('Check number.'),
        		'type' => 'varchar',
        		'length' => 255,
        		'not null' => TRUE,
        		'default' => ''
			),
			'post_dated' => array(
				'description' => 'Whether check is postdated.',
        		'type' => 'int',
        		'not null' => TRUE,
        		'default' => 0,
				'size' => 'tiny'
			),
			'cash_date' => array(
				'description' => t('Cash date of post dated check.'),
        		'type' => 'varchar',
        		'length' => 255,
        		'not null' => TRUE,
        		'default' => ''
			)
		),
		'primary key' => array('pid'),
		'indexes' => array(
    		'sid'        => array('sid')
  		)
	);

	$schema['user_term_credits_money_order_log'] = array(
		'description' => 'A log of mo payments.',
		'fields' => array(
			'pid' => array(
				'type' => 'serial',
				'not null' => TRUE,
				'unsigned' => TRUE,
				'description' => 'The payment event log id.'
			),
			'sid' => array(
				'type' => 'int',
        		'not null' => TRUE,
        		'default' => 0,
				'unsigned' => TRUE,
				'description' => "Settlement ID"
			),
			'paid_amount' => array(
				'type' => 'numeric',
		        'precision' => 16,
		        'scale' => 5,
		        'not null' => TRUE,
		        'default' => 0.0,
			),
			'reference' => array(
				'description' => t('Money order reference.'),
        		'type' => 'varchar',
        		'length' => 255,
        		'not null' => TRUE,
        		'default' => ''
			)
		),
		'primary key' => array('pid'),
		'indexes' => array(
    		'sid'        => array('sid')
  		)
	);
	
	return $schema;
}

function user_term_credits_install() {
	drupal_install_schema('user_term_credits');
}

function user_term_credits_uninstall() {
	drupal_uninstall_schema('user_term_credits');
}

function user_term_credits_update_6014() {
	$ret = array();
	$table = 'user_term_credits_settlements';
	$field_name = 'euid';
	$field = array(
		'type' => 'int',
		'not null' => TRUE,
		'default' => 0,
		'unsigned' => TRUE,
		'description' => "User ID of the employee."
	);

	$field_name2 = 'register_id';
	$field2 = array(
		'description' => t('Register id'),
		'type' => 'varchar',
		'length' => 255,
		'not null' => TRUE,
		'default' => ''
	);

	db_add_field($ret, $table, $field_name, $field, array());
	db_add_field($ret, $table, $field_name2, $field2, array());
}

function user_term_credits_update_6015() {
	//Add payment logs
	$new_tables = array('user_term_credits_check_log',
		'user_term_credits_credit_card_log',
		'user_term_credits_cash_log',
		'user_term_credits_money_order_log');

	foreach($new_tables as $table_name) {
		$res = array();
		$table = drupal_get_schema_unprocessed('user_term_credits', $table_name);
		db_create_table($res, $table_name, $table);
	}
}